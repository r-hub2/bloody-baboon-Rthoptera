% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spectrum_ggplot.R
\name{spectrum_ggplot}
\alias{spectrum_ggplot}
\title{Power Spectrum with ggplot2}
\usage{
spectrum_ggplot(
  wave,
  auto.wl = TRUE,
  wl = NULL,
  ovlp = 75,
  y.min = -100,
  y.breaks = c(-40, -20, 0),
  x.breaks = 6,
  y.position = "left",
  x.position = "bottom",
  flip = FALSE,
  color.db = "grey30",
  color.linear = "black",
  color.carrier = "dodgerblue",
  color.threshold = "forestgreen",
  color.bandwidth = "forestgreen",
  fun = "mean",
  wn = "blackman",
  show.x.title = TRUE,
  show.y.title = TRUE,
  add.params = FALSE,
  add.summary = TRUE,
  plot.title = "",
  italic.title = FALSE,
  fmin = 0,
  fmax = NULL,
  linewidth = 1,
  total.bandwidth = FALSE,
  show.lines = FALSE
)
}
\arguments{
\item{wave}{A Wave object (from `tuneR` package), representing the sound waveform.}

\item{auto.wl}{Logical. If `TRUE`, the window length (`wl`) is automatically calculated based on the sampling rate of the waveform.}

\item{wl}{Numeric. Window length for the FFT. Ignored if `auto.wl` is `TRUE`.}

\item{ovlp}{Numeric. Overlap between windows in percentage (0 to 100). Default is 75.}

\item{y.min}{Numeric. Minimum value for the y-axis (used when plotting in dB scale).}

\item{y.breaks}{Numeric vector. Break points for the y-axis in the dB scale plot.}

\item{x.breaks}{Integer. Number of breaks for the x-axis (frequency).}

\item{y.position}{Character. Position of the y-axis, can be "left" or "right".}

\item{x.position}{Character. Position of the x-axis, can be "bottom" or "top".}

\item{flip}{Logical. If `TRUE`, flips the x and y axes.}

\item{color.db}{Character. Color for the dB scale plot.}

\item{color.linear}{Character. Color for the linear scale plot.}

\item{color.carrier}{Character. Color for the carrier frequency line.}

\item{color.threshold}{Character. Color for the threshold line.}

\item{color.bandwidth}{Character. Color for the bandwidth lines.}

\item{fun}{Character. Summary function for calculating the power spectrum, default is "mean".}

\item{wn}{Character. Windowing function for the FFT. Default is "blackman".}

\item{show.x.title}{Logical. If `TRUE`, displays the x-axis title.}

\item{show.y.title}{Logical. If `TRUE`, displays the y-axis title.}

\item{add.params}{Logical. If `TRUE`, adds parameter information (window size, overlap, etc.) to the plot.}

\item{add.summary}{Logical. If `TRUE`, adds spectral summary statistics (entropy, flatness, carrier frequency, bandwidth) to the plot.}

\item{plot.title}{Character. Title for the plot.}

\item{italic.title}{Logical. If `TRUE`, italicizes the plot title.}

\item{fmin}{Numeric. Minimum frequency to display (in kHz).}

\item{fmax}{Numeric. Maximum frequency to display (in kHz). If `NULL`, defaults to half the sampling rate (Nyquist frequency).}

\item{linewidth}{Numeric. Line width for the carrier and bandwidth lines.}

\item{total.bandwidth}{Logical. If `TRUE`, calculates the total bandwidth using a threshold of 0.1.}

\item{show.lines}{Logical. If `TRUE`, displays lines for the carrier frequency and bandwidth.}
}
\value{
A list containing the `ggplot` object for the power spectrum plot.
}
\description{
This function generates a power spectrum plot using `ggplot2` based on the provided waveform object (`wave`). The plot can display normalized amplitude values on both dB and linear scales, and includes options for customizing the display of the carrier frequency, bandwidth, and other spectral details.
}
\examples{
\dontrun{
spectrum_ggplot(coryphoda)
 }
}
